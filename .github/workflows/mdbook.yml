name: Deploy mdBook site to Pages

on:
  push:
    branches: ["book"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MDBOOK_VERSION: 0.4.44
    steps:
      - uses: actions/checkout@v4

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: cargo-registry-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-registry-${{ runner.os }}-

      - name: Cache Cargo build artifacts
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: cargo-bin-${{ runner.os }}-${{ env.MDBOOK_VERSION }}
          restore-keys: |
            cargo-bin-${{ runner.os }}-

      - name: Install mdBook and plugins (if not cached)
        run: |
          if [ ! -f ~/.cargo/bin/mdbook ]; then
            curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf -y | sh
            rustup update
            cargo install --version ${MDBOOK_VERSION} mdbook
            cargo install mdbook-katex
            cargo install mdbook-admonish
            mdbook-admonish install
          fi

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with mdBook
        run: mdbook build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./book

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
